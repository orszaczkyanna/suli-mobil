<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Hello World!"

        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent"

        android:id="@+id/vizsgaSzoveg"
        android:textColor="@color/time_color"
        android:textSize="30sp"
        />

</androidx.constraintlayout.widget.ConstraintLayout>


<!--
  Megjegyzések:

  androidx.constraintlayout.widget.ConstraintLayout
    → Modern elrendezés, amely lehetővé teszi az elemek pontos és rugalmas pozicionálását más elemekhez vagy a szülőhöz viszonyítva
    → A RelativeLayout-hoz képest jóval rugalmasabb és hatékonyabb, mivel kevesebb beágyazás mellett is összetett elrendezések valósíthatók meg

  app:layout_constraintTop_toTopOf="parent"
    → A felső éle igazodik a szülő komponens felső széléhez

  app:layout_constraintBottom_toBottomOf="parent"
    → Az alsó éle igazodik a szülő komponens alsó széléhez

  app:layout_constraintStart_toStartOf="parent"
    → A bal oldala (start) igazodik a szülő bal széléhez

  app:layout_constraintEnd_toEndOf="parent"
    → A jobb oldala (end) igazodik a szülő jobb széléhez

    → Ezek együtt használva azt eredményezik, hogy az elem vízszintesen és függőlegesen is középre kerül
-->
